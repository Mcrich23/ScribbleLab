{"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/AuthFlow","doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService"],"generated":true,"title":"Authentication"}],"variants":[{"paths":["\/documentation\/scribblelab\/auth"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Scribble Labâ€™s Auth Services","type":"text"}],"kind":"article","metadata":{"title":"Auth","modules":[{"name":"ScribbleLab"}],"roleHeading":"Article","role":"article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/Auth"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The ScribbleLab Auth Service is a secure, reliable and easy-to-use authentication service that allows users to gain access to the applicationâ€™s resources through a simple and straightforward process. The ScribbleLab Auth Service is built on top of Firebase, a powerful and scalable database service, ensuring that user authentication is done in a secure and robust manner."}]},{"inlineContent":[{"text":"We offer our users three ways to authenticate:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Google Sign In "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"(GID)"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SignInWithApple "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"(SIWA)"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"ScribbleLabApp Account "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"(SLA)"}]}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"All three ways are secure due to our secured database.","type":"text"}]},{"level":3,"anchor":"How-is-Firebase-connected-to-our-App","type":"heading","text":"How is Firebase connected to our App?"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"In order to use Firebase you need to import Firebase via SPM and import it in your AppFile as following:","type":"text"}]},{"code":["import SwiftUI","import FirebaseCore"],"type":"codeListing","syntax":"swift"}]},{"content":[{"inlineContent":[{"type":"text","text":"Then you need to add Firebase to your AppDelegate:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["class AppDelegate: NSObject, UIApplicationDelegate {","    func application(_ application: UIApplication,","                didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        FirebaseApp.configure()","","        return true","    }","}"]},{"name":"For the use for GID","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"In order to use GID (= GoogleSignIn) you need to add GoogleSignIn to your Project via SPM. Then import it in your AppFile."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import FirebaseCore","import GoogleSignIn"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then add the following code to your AppDelegate in order to let GID run properly:"}]},{"syntax":"swift","code":["\/\/ The method should call the handleURL method of GIDSignIn instance, which will properly handle the URL that SL recieves at the end of the auth process.","@available(iOS 9.0, *)","func application(_ application: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {","   return GIDSignIn.sharedInstance.handle(url)","}"],"type":"codeListing"}],"type":"aside"}]},{"content":[{"inlineContent":[{"text":"Firebase is now succesfully conected from your App site ðŸŽ‰","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"How-does-our-Authentication-work","type":"heading","level":3,"text":"How does our Authentication work?"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While the App is launching it checks wether you have a valide UserSession (email, password, uuid). In order to do that we call our "},{"type":"reference","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel","isActive":true},{"type":"text","text":" that asks FirebaseAuth after a valide user session:"}]},{"type":"codeListing","syntax":"swift","code":["private let service = SLAuthService.shared","private var canellables = Set<AnyCancellable>()","","@Published var userSession: FirebaseAuth.User?","@Published var currentUser: User?","","init() {","    setupSubscribers()","}","","func setupSubscribers() {","    service.$userSession.sink { [weak self] userSession in","        self?.userSession = userSession","    }","    .store(in: &canellables)","    ","    service.$currentUser.sink { [weak self] currentUser in","        self?.currentUser = currentUser","    }","    .store(in: &canellables)","}"]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import SwiftUI","","struct ContentView: View {","   @StateObject var viewModel = ContentViewModel()","","   var body: some View {","       Group {","           if $viewModel.userSession == nil {","               SignUpView()","           } else if let currentUser = viewModel.currentUser {","             SLSideBarView()","          }","      }","   }","}"]}],"name":"ContentView.swift","style":"note"},{"inlineContent":[{"type":"text","text":"While this is all happening our "},{"type":"reference","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel","isActive":true},{"text":" also calls the ","type":"text"},{"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService","isActive":true,"type":"reference"},{"type":"text","text":" that tries to fetch the user:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@MainActor","func loadUserData() async throws {","    self.userSession = Auth.auth().currentUser","    guard let currentUid = userSession?.uid else { return }","    self.currentUser = try await UserService.fetchUser(withUid: currentUid)","}"]},{"type":"heading","text":"Section header","level":3,"anchor":"Section-header"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab"]]},"references":{"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/SLAuthService":{"navigatorTitle":[{"kind":"identifier","text":"SLAuthService"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SLAuthService"}],"role":"symbol","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService","type":"topic","title":"SLAuthService","abstract":[{"type":"text","text":"ScribbleLabâ€™s service responsible for managing user authentication and data operations."}],"url":"\/documentation\/scribblelab\/slauthservice","kind":"symbol"},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/ContentViewModel":{"abstract":[],"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel","role":"symbol","url":"\/documentation\/scribblelab\/contentviewmodel","title":"ContentViewModel","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContentViewModel"}],"navigatorTitle":[{"text":"ContentViewModel","kind":"identifier"}],"type":"topic"},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/AuthFlow":{"title":"AuthFlow","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/AuthFlow","type":"topic","role":"article","url":"\/documentation\/scribblelab\/authflow","abstract":[{"type":"text","text":"ScribbleLabâ€™s Auth flow"}],"kind":"article"},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab":{"abstract":[{"text":"ScribbleLabâ€™s developer documentation","type":"text"}],"kind":"symbol","title":"ScribbleLab","type":"topic","url":"\/documentation\/scribblelab","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab","role":"collection"}}}