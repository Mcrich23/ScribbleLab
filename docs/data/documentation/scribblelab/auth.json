{"hierarchy":{"paths":[["doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab"]]},"metadata":{"role":"article","roleHeading":"Article","title":"Auth","modules":[{"name":"ScribbleLab"}]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scribblelab\/auth"]}],"sections":[],"abstract":[{"type":"text","text":"Scribble Labâ€™s Auth Services"}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"The ScribbleLab Auth Service is a secure, reliable and easy-to-use authentication service that allows users to gain access to the applicationâ€™s resources through a simple and straightforward process. The ScribbleLab Auth Service is built on top of Firebase, a powerful and scalable database service, ensuring that user authentication is done in a secure and robust manner.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"We offer our users three ways to authenticate:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Google Sign In "},{"inlineContent":[{"type":"codeVoice","code":"(GID)"}],"type":"strong"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"SignInWithApple ","type":"text"},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"(SIWA)"}]}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ScribbleLabApp Account "},{"inlineContent":[{"type":"codeVoice","code":"(SLA)"}],"type":"strong"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All three ways are secure due to our secured database."}]},{"type":"heading","anchor":"How-is-Firebase-connected-to-our-App","text":"How is Firebase connected to our App?","level":3},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"In order to use Firebase you need to import Firebase via SPM and import it in your AppFile as following:"}],"type":"paragraph"},{"syntax":"swift","code":["import SwiftUI","import FirebaseCore"],"type":"codeListing"}]},{"content":[{"inlineContent":[{"type":"text","text":"Then you need to add Firebase to your AppDelegate:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["class AppDelegate: NSObject, UIApplicationDelegate {","    func application(_ application: UIApplication,","                didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        FirebaseApp.configure()","","        return true","    }","}"]},{"name":"For the use for GID","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"In order to use GID (= GoogleSignIn) you need to add GoogleSignIn to your Project via SPM. Then import it in your AppFile."}]},{"type":"codeListing","code":["import SwiftUI","import FirebaseCore","import GoogleSignIn"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then add the following code to your AppDelegate in order to let GID run properly:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ The method should call the handleURL method of GIDSignIn instance, which will properly handle the URL that SL recieves at the end of the auth process.","@available(iOS 9.0, *)","func application(_ application: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {","   return GIDSignIn.sharedInstance.handle(url)","}"]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Firebase is now succesfully conected from your App site ðŸŽ‰"}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"anchor":"How-does-our-Authentication-work","text":"How does our Authentication work?"},{"inlineContent":[{"type":"text","text":"While the App is launching it checks wether you have a valide UserSession (email, password, uuid). In order to do that we call our "},{"type":"reference","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel","isActive":true},{"type":"text","text":" that asks FirebaseAuth after a valide user session:"}],"type":"paragraph"},{"type":"codeListing","code":["private let service = SLAuthService.shared","private var canellables = Set<AnyCancellable>()","","@Published var userSession: FirebaseAuth.User?","@Published var currentUser: User?","","init() {","    setupSubscribers()","}","","func setupSubscribers() {","    service.$userSession.sink { [weak self] userSession in","        self?.userSession = userSession","    }","    .store(in: &canellables)","    ","    service.$currentUser.sink { [weak self] currentUser in","        self?.currentUser = currentUser","    }","    .store(in: &canellables)","}"],"syntax":"swift"},{"type":"aside","style":"note","name":"ContentView.swift","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","","struct ContentView: View {","   @StateObject var viewModel = ContentViewModel()","","   var body: some View {","       Group {","           if $viewModel.userSession == nil {","               SignUpView()","           } else if let currentUser = viewModel.currentUser {","             SLSideBarView()","          }","      }","   }","}"]}]},{"type":"paragraph","inlineContent":[{"text":"While this is all happening our ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel"},{"type":"text","text":" also calls the "},{"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService","type":"reference","isActive":true},{"type":"text","text":" that tries to fetch the user:"}]},{"syntax":"swift","type":"codeListing","code":["@MainActor","func loadUserData() async throws {","    self.userSession = Auth.auth().currentUser","    guard let currentUid = userSession?.uid else { return }","    self.currentUser = try await UserService.fetchUser(withUid: currentUid)","}"]},{"level":3,"anchor":"Section-header","text":"Section header","type":"heading"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/Auth","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/AuthFlow","doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService"],"title":"Authentication"}],"references":{"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/ContentViewModel":{"title":"ContentViewModel","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ContentViewModel","kind":"identifier"}],"abstract":[{"type":"text","text":"A Model that manages data related to user sessions and current user information."}],"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel","navigatorTitle":[{"kind":"identifier","text":"ContentViewModel"}],"url":"\/documentation\/scribblelab\/contentviewmodel","kind":"symbol","role":"symbol"},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab":{"url":"\/documentation\/scribblelab","title":"ScribbleLab","type":"topic","abstract":[{"text":"ScribbleLabâ€™s developer documentation","type":"text"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab"},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/SLAuthService":{"url":"\/documentation\/scribblelab\/slauthservice","abstract":[{"text":"ScribbleLabâ€™s service responsible for managing user authentication and data operations.","type":"text"}],"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService","type":"topic","kind":"symbol","title":"SLAuthService","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SLAuthService"}],"role":"symbol","navigatorTitle":[{"text":"SLAuthService","kind":"identifier"}]},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/AuthFlow":{"type":"topic","kind":"article","role":"article","title":"AuthFlow","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/AuthFlow","abstract":[{"text":"ScribbleLabâ€™s Auth flow","type":"text"}],"url":"\/documentation\/scribblelab\/authflow"}}}